{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivas\\\\My Project\\\\QuickLAN\\\\frontend\\\\src\\\\components\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Typography, Paper, LinearProgress, List, ListItem, ListItemText, Snackbar, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onFileUpload\n}) => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [successFiles, setSuccessFiles] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const handleFileSelect = e => {\n    setSelectedFiles(Array.from(e.target.files));\n    setSuccessFiles([]);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setSelectedFiles(Array.from(e.dataTransfer.files));\n    setSuccessFiles([]);\n  };\n  const preventDefaults = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleUpload = async () => {\n    if (!selectedFiles.length) return;\n    setUploading(true);\n    const uploaded = [];\n    for (const file of selectedFiles) {\n      try {\n        await onFileUpload(file);\n        uploaded.push(file.name);\n      } catch (err) {\n        console.error('Upload failed for:', file.name, err);\n      }\n    }\n    setUploading(false);\n    setSuccessFiles(uploaded);\n    setSnackbarOpen(true);\n    setSelectedFiles([]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4,\n        mt: 4,\n        maxWidth: 600,\n        margin: 'auto',\n        boxShadow: 3,\n        textAlign: 'center',\n        border: '2px dashed #1976d2',\n        bgcolor: '#f9f9f9'\n      },\n      onDrop: handleDrop,\n      onDragOver: preventDefaults,\n      onDragEnter: preventDefaults,\n      onDragLeave: preventDefaults,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Drag & drop files here or use the button below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        id: \"fileInput\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"span\",\n          sx: {\n            mt: 2\n          },\n          children: \"Choose Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Selected Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: selectedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: file.name,\n              secondary: `${(file.size / 1024).toFixed(2)} KB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleUpload,\n          disabled: uploading,\n          sx: {\n            mt: 2\n          },\n          children: uploading ? 'Uploading...' : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), uploading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n          sx: {\n            mt: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 4000,\n      onClose: () => setSnackbarOpen(false),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbarOpen(false),\n        severity: \"success\",\n        variant: \"filled\",\n        sx: {\n          width: '100%'\n        },\n        children: [successFiles.length, \" file(s) uploaded successfully!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUploader, \"tLfk3cit9BCUBbzfjyes31e0Ymg=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","Box","Button","Typography","Paper","LinearProgress","List","ListItem","ListItemText","Snackbar","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","onFileUpload","_s","selectedFiles","setSelectedFiles","uploading","setUploading","successFiles","setSuccessFiles","snackbarOpen","setSnackbarOpen","handleFileSelect","e","Array","from","target","files","handleDrop","preventDefault","dataTransfer","preventDefaults","stopPropagation","handleUpload","length","uploaded","file","push","name","err","console","error","children","sx","p","mt","maxWidth","margin","boxShadow","textAlign","border","bgcolor","onDrop","onDragOver","onDragEnter","onDragLeave","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","type","multiple","hidden","id","onChange","htmlFor","component","dense","map","idx","primary","secondary","size","toFixed","onClick","disabled","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","_c","$RefreshReg$"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/components/FileUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\n\r\nconst FileUploader = ({ onFileUpload }) => {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [successFiles, setSuccessFiles] = useState([]);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const handleFileSelect = (e) => {\r\n    setSelectedFiles(Array.from(e.target.files));\r\n    setSuccessFiles([]);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setSelectedFiles(Array.from(e.dataTransfer.files));\r\n    setSuccessFiles([]);\r\n  };\r\n\r\n  const preventDefaults = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFiles.length) return;\r\n\r\n    setUploading(true);\r\n    const uploaded = [];\r\n\r\n    for (const file of selectedFiles) {\r\n      try {\r\n        await onFileUpload(file);\r\n        uploaded.push(file.name);\r\n      } catch (err) {\r\n        console.error('Upload failed for:', file.name, err);\r\n      }\r\n    }\r\n\r\n    setUploading(false);\r\n    setSuccessFiles(uploaded);\r\n    setSnackbarOpen(true);\r\n    setSelectedFiles([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        sx={{\r\n          p: 4,\r\n          mt: 4,\r\n          maxWidth: 600,\r\n          margin: 'auto',\r\n          boxShadow: 3,\r\n          textAlign: 'center',\r\n          border: '2px dashed #1976d2',\r\n          bgcolor: '#f9f9f9',\r\n        }}\r\n        onDrop={handleDrop}\r\n        onDragOver={preventDefaults}\r\n        onDragEnter={preventDefaults}\r\n        onDragLeave={preventDefaults}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Upload Files\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Drag & drop files here or use the button below\r\n        </Typography>\r\n\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          hidden\r\n          id=\"fileInput\"\r\n          onChange={handleFileSelect}\r\n        />\r\n        <label htmlFor=\"fileInput\">\r\n          <Button variant=\"outlined\" component=\"span\" sx={{ mt: 2 }}>\r\n            Choose Files\r\n          </Button>\r\n        </label>\r\n\r\n        {selectedFiles.length > 0 && (\r\n          <Box sx={{ mt: 3 }}>\r\n            <Typography variant=\"subtitle1\">Selected Files:</Typography>\r\n            <List dense>\r\n              {selectedFiles.map((file, idx) => (\r\n                <ListItem key={idx}>\r\n                  <ListItemText\r\n                    primary={file.name}\r\n                    secondary={`${(file.size / 1024).toFixed(2)} KB`}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUpload}\r\n              disabled={uploading}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              {uploading ? 'Uploading...' : 'Upload'}\r\n            </Button>\r\n\r\n            {uploading && <LinearProgress sx={{ mt: 2 }} />}\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={4000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={() => setSnackbarOpen(false)}\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {successFiles.length} file(s) uploaded successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}