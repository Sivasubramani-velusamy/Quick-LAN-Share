{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivas\\\\My Project\\\\QuickLAN\\\\frontend\\\\src\\\\components\\\\ConnectionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Typography, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionForm = ({\n  onConnect\n}) => {\n  _s();\n  const [ip, setIp] = useState('');\n  const [port, setPort] = useState(9090);\n  const handleConnect = () => {\n    if (ip && port) {\n      onConnect(ip, port);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      maxWidth: 400,\n      margin: 'auto',\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Connect to Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Receiver IP\",\n        value: ip,\n        onChange: e => setIp(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Receiver Port\",\n        type: \"number\",\n        value: port,\n        onChange: e => setPort(Number(e.target.value)),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleConnect,\n        disabled: !ip || !port,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionForm, \"s28Qo+mzrAPZryWdDEaMse8PHtg=\");\n_c = ConnectionForm;\nexport default ConnectionForm;\nvar _c;\n$RefreshReg$(_c, \"ConnectionForm\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","Paper","jsxDEV","_jsxDEV","ConnectionForm","onConnect","_s","ip","setIp","port","setPort","handleConnect","sx","p","maxWidth","margin","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","fullWidth","type","Number","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/components/ConnectionForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, Button, Typography, Paper } from '@mui/material';\r\n\r\nconst ConnectionForm = ({ onConnect }) => {\r\n  const [ip, setIp] = useState('');\r\n  const [port, setPort] = useState(9090);\r\n\r\n  const handleConnect = () => {\r\n    if (ip && port) {\r\n      onConnect(ip, port);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, maxWidth: 400, margin: 'auto', mt: 6 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Connect to Receiver\r\n      </Typography>\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        <TextField\r\n          label=\"Receiver IP\"\r\n          value={ip}\r\n          onChange={(e) => setIp(e.target.value)}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Receiver Port\"\r\n          type=\"number\"\r\n          value={port}\r\n          onChange={(e) => setPort(Number(e.target.value))}\r\n          fullWidth\r\n        />\r\n        <Button variant=\"contained\" onClick={handleConnect} disabled={!ip || !port}>\r\n          Connect\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ConnectionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,EAAE,IAAIE,IAAI,EAAE;MACdJ,SAAS,CAACE,EAAE,EAAEE,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA,CAACF,KAAK;IAACW,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACxDd,OAAA,CAACH,UAAU;MAACkB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbpB,OAAA,CAACN,GAAG;MAACe,EAAE,EAAE;QAAEY,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAE,CAAE;MAAAT,QAAA,gBAC5Dd,OAAA,CAACL,SAAS;QACR6B,KAAK,EAAC,aAAa;QACnBC,KAAK,EAAErB,EAAG;QACVsB,QAAQ,EAAGC,CAAC,IAAKtB,KAAK,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACvCI,SAAS;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFpB,OAAA,CAACL,SAAS;QACR6B,KAAK,EAAC,eAAe;QACrBM,IAAI,EAAC,QAAQ;QACbL,KAAK,EAAEnB,IAAK;QACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACwB,MAAM,CAACJ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;QACjDI,SAAS;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACFpB,OAAA,CAACJ,MAAM;QAACmB,OAAO,EAAC,WAAW;QAACiB,OAAO,EAAExB,aAAc;QAACyB,QAAQ,EAAE,CAAC7B,EAAE,IAAI,CAACE,IAAK;QAAAQ,QAAA,EAAC;MAE5E;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACjB,EAAA,CAnCIF,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}