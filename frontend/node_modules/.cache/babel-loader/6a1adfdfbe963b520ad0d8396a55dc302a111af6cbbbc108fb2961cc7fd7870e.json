{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\nconst useWebSocket = url => {\n  _s();\n  const stompClient = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const socket = new SockJS(url);\n    stompClient.current = Stomp.over(socket);\n    stompClient.current.connect({}, () => {\n      setConnected(true);\n      console.log('STOMP connected');\n      stompClient.current.subscribe('/topic/progress', message => {\n        if (message.body) {\n          setMessages(prev => [...prev, message.body]);\n          console.log('Received message:', message.body);\n        }\n      });\n    }, error => {\n      setConnected(false);\n      console.error('STOMP error:', error);\n    });\n    return () => {\n      if (stompClient.current) {\n        stompClient.current.disconnect(() => {\n          setConnected(false);\n          console.log('STOMP disconnected');\n        });\n      }\n    };\n  }, [url]);\n  const sendMessage = msg => {\n    if (stompClient.current && stompClient.current.connected) {\n      stompClient.current.send('/app/progress', {}, msg);\n    } else {\n      console.error('STOMP client is not connected');\n    }\n  };\n  return {\n    connected,\n    messages,\n    sendMessage\n  };\n};\n_s(useWebSocket, \"caIxUWkuMXz6xSGUz5PS21igKJQ=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useRef","useState","SockJS","Stomp","useWebSocket","url","_s","stompClient","messages","setMessages","connected","setConnected","socket","current","over","connect","console","log","subscribe","message","body","prev","error","disconnect","sendMessage","msg","send"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'webstomp-client';\r\n\r\nconst useWebSocket = (url) => {\r\n  const stompClient = useRef(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS(url);\r\n    stompClient.current = Stomp.over(socket);\r\n\r\n    stompClient.current.connect({}, () => {\r\n      setConnected(true);\r\n      console.log('STOMP connected');\r\n\r\n      stompClient.current.subscribe('/topic/progress', (message) => {\r\n        if (message.body) {\r\n          setMessages((prev) => [...prev, message.body]);\r\n          console.log('Received message:', message.body);\r\n        }\r\n      });\r\n    }, (error) => {\r\n      setConnected(false);\r\n      console.error('STOMP error:', error);\r\n    });\r\n\r\n    return () => {\r\n      if (stompClient.current) {\r\n        stompClient.current.disconnect(() => {\r\n          setConnected(false);\r\n          console.log('STOMP disconnected');\r\n        });\r\n      }\r\n    };\r\n  }, [url]);\r\n\r\n  const sendMessage = (msg) => {\r\n    if (stompClient.current && stompClient.current.connected) {\r\n      stompClient.current.send('/app/progress', {}, msg);\r\n    } else {\r\n      console.error('STOMP client is not connected');\r\n    }\r\n  };\r\n\r\n  return { connected, messages, sendMessage };\r\n};\r\n\r\nexport default useWebSocket;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC5B,MAAMC,WAAW,GAAGP,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAG,IAAIV,MAAM,CAACG,GAAG,CAAC;IAC9BE,WAAW,CAACM,OAAO,GAAGV,KAAK,CAACW,IAAI,CAACF,MAAM,CAAC;IAExCL,WAAW,CAACM,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;MACpCJ,YAAY,CAAC,IAAI,CAAC;MAClBK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAE9BV,WAAW,CAACM,OAAO,CAACK,SAAS,CAAC,iBAAiB,EAAGC,OAAO,IAAK;QAC5D,IAAIA,OAAO,CAACC,IAAI,EAAE;UAChBX,WAAW,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,OAAO,CAACC,IAAI,CAAC,CAAC;UAC9CJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,OAAO,CAACC,IAAI,CAAC;QAChD;MACF,CAAC,CAAC;IACJ,CAAC,EAAGE,KAAK,IAAK;MACZX,YAAY,CAAC,KAAK,CAAC;MACnBK,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIf,WAAW,CAACM,OAAO,EAAE;QACvBN,WAAW,CAACM,OAAO,CAACU,UAAU,CAAC,MAAM;UACnCZ,YAAY,CAAC,KAAK,CAAC;UACnBK,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACnC,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,CAACZ,GAAG,CAAC,CAAC;EAET,MAAMmB,WAAW,GAAIC,GAAG,IAAK;IAC3B,IAAIlB,WAAW,CAACM,OAAO,IAAIN,WAAW,CAACM,OAAO,CAACH,SAAS,EAAE;MACxDH,WAAW,CAACM,OAAO,CAACa,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,EAAED,GAAG,CAAC;IACpD,CAAC,MAAM;MACLT,OAAO,CAACM,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACF,CAAC;EAED,OAAO;IAAEZ,SAAS;IAAEF,QAAQ;IAAEgB;EAAY,CAAC;AAC7C,CAAC;AAAClB,EAAA,CA3CIF,YAAY;AA6ClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}