{"ast":null,"code":"import React,{useState}from'react';import{Box,Button,Typography,Paper,LinearProgress,List,ListItem,ListItemText,Snackbar,Alert}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FileUploader=_ref=>{let{onFileUpload}=_ref;const[selectedFiles,setSelectedFiles]=useState([]);const[uploading,setUploading]=useState(false);const[successFiles,setSuccessFiles]=useState([]);const[snackbarOpen,setSnackbarOpen]=useState(false);const handleFileSelect=e=>{setSelectedFiles(Array.from(e.target.files));setSuccessFiles([]);};const handleDrop=e=>{e.preventDefault();setSelectedFiles(Array.from(e.dataTransfer.files));setSuccessFiles([]);};const preventDefaults=e=>{e.preventDefault();e.stopPropagation();};const handleUpload=async()=>{if(!selectedFiles.length)return;setUploading(true);const uploaded=[];for(const file of selectedFiles){try{await onFileUpload(file);uploaded.push(file.name);}catch(err){console.error('Upload failed for:',file.name,err);}}setUploading(false);setSuccessFiles(uploaded);setSnackbarOpen(true);setSelectedFiles([]);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Paper,{sx:{p:4,mt:4,maxWidth:600,margin:'auto',boxShadow:3,textAlign:'center',border:'2px dashed #1976d2',bgcolor:'#f9f9f9'},onDrop:handleDrop,onDragOver:preventDefaults,onDragEnter:preventDefaults,onDragLeave:preventDefaults,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Upload Files\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",gutterBottom:true,children:\"Drag & drop files here or use the button below\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,hidden:true,id:\"fileInput\",onChange:handleFileSelect}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fileInput\",children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",component:\"span\",sx:{mt:2},children:\"Choose Files\"})}),selectedFiles.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Selected Files:\"}),/*#__PURE__*/_jsx(List,{dense:true,children:selectedFiles.map((file,idx)=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:file.name,secondary:\"\".concat((file.size/1024).toFixed(2),\" KB\")})},idx))}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleUpload,disabled:uploading,sx:{mt:2},children:uploading?'Uploading...':'Upload'}),uploading&&/*#__PURE__*/_jsx(LinearProgress,{sx:{mt:2}})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbarOpen,autoHideDuration:4000,onClose:()=>setSnackbarOpen(false),anchorOrigin:{vertical:'bottom',horizontal:'center'},children:/*#__PURE__*/_jsxs(Alert,{onClose:()=>setSnackbarOpen(false),severity:\"success\",variant:\"filled\",sx:{width:'100%'},children:[successFiles.length,\" file(s) uploaded successfully!\"]})})]});};export default FileUploader;","map":{"version":3,"names":["React","useState","Box","Button","Typography","Paper","LinearProgress","List","ListItem","ListItemText","Snackbar","Alert","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileUploader","_ref","onFileUpload","selectedFiles","setSelectedFiles","uploading","setUploading","successFiles","setSuccessFiles","snackbarOpen","setSnackbarOpen","handleFileSelect","e","Array","from","target","files","handleDrop","preventDefault","dataTransfer","preventDefaults","stopPropagation","handleUpload","length","uploaded","file","push","name","err","console","error","children","sx","p","mt","maxWidth","margin","boxShadow","textAlign","border","bgcolor","onDrop","onDragOver","onDragEnter","onDragLeave","variant","gutterBottom","color","type","multiple","hidden","id","onChange","htmlFor","component","dense","map","idx","primary","secondary","concat","size","toFixed","onClick","disabled","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/components/FileUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\n\r\nconst FileUploader = ({ onFileUpload }) => {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [successFiles, setSuccessFiles] = useState([]);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n\r\n  const handleFileSelect = (e) => {\r\n    setSelectedFiles(Array.from(e.target.files));\r\n    setSuccessFiles([]);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setSelectedFiles(Array.from(e.dataTransfer.files));\r\n    setSuccessFiles([]);\r\n  };\r\n\r\n  const preventDefaults = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFiles.length) return;\r\n\r\n    setUploading(true);\r\n    const uploaded = [];\r\n\r\n    for (const file of selectedFiles) {\r\n      try {\r\n        await onFileUpload(file);\r\n        uploaded.push(file.name);\r\n      } catch (err) {\r\n        console.error('Upload failed for:', file.name, err);\r\n      }\r\n    }\r\n\r\n    setUploading(false);\r\n    setSuccessFiles(uploaded);\r\n    setSnackbarOpen(true);\r\n    setSelectedFiles([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        sx={{\r\n          p: 4,\r\n          mt: 4,\r\n          maxWidth: 600,\r\n          margin: 'auto',\r\n          boxShadow: 3,\r\n          textAlign: 'center',\r\n          border: '2px dashed #1976d2',\r\n          bgcolor: '#f9f9f9',\r\n        }}\r\n        onDrop={handleDrop}\r\n        onDragOver={preventDefaults}\r\n        onDragEnter={preventDefaults}\r\n        onDragLeave={preventDefaults}\r\n      >\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Upload Files\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n          Drag & drop files here or use the button below\r\n        </Typography>\r\n\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          hidden\r\n          id=\"fileInput\"\r\n          onChange={handleFileSelect}\r\n        />\r\n        <label htmlFor=\"fileInput\">\r\n          <Button variant=\"outlined\" component=\"span\" sx={{ mt: 2 }}>\r\n            Choose Files\r\n          </Button>\r\n        </label>\r\n\r\n        {selectedFiles.length > 0 && (\r\n          <Box sx={{ mt: 3 }}>\r\n            <Typography variant=\"subtitle1\">Selected Files:</Typography>\r\n            <List dense>\r\n              {selectedFiles.map((file, idx) => (\r\n                <ListItem key={idx}>\r\n                  <ListItemText\r\n                    primary={file.name}\r\n                    secondary={`${(file.size / 1024).toFixed(2)} KB`}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUpload}\r\n              disabled={uploading}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              {uploading ? 'Uploading...' : 'Upload'}\r\n            </Button>\r\n\r\n            {uploading && <LinearProgress sx={{ mt: 2 }} />}\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={4000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={() => setSnackbarOpen(false)}\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {successFiles.length} file(s) uploaded successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}