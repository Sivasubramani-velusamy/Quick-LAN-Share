{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivas\\\\My Project\\\\QuickLAN\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Container } from '@mui/material';\nimport HomePage from './pages/HomePage';\nimport DashboardPage from './pages/DashboardPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [receiverIp, setReceiverIp] = useState('');\n  const [receiverPort, setReceiverPort] = useState(9090);\n  const handleConnect = (ip, port) => {\n    setReceiverIp(ip);\n    setReceiverPort(port);\n    setConnected(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"QuickLAN File Sender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        mt: 4\n      },\n      children: !connected ? /*#__PURE__*/_jsxDEV(HomePage, {\n        onConnect: handleConnect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DashboardPage, {\n        receiverIp: receiverIp,\n        receiverPort: receiverPort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"HTXTWtv21Zv0bQID86Ex2QdiZkY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AppBar","Toolbar","Typography","Container","HomePage","DashboardPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","connected","setConnected","receiverIp","setReceiverIp","receiverPort","setReceiverPort","handleConnect","ip","port","children","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","onConnect","_c","$RefreshReg$"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { AppBar, Toolbar, Typography, Container } from '@mui/material';\r\nimport HomePage from './pages/HomePage';\r\nimport DashboardPage from './pages/DashboardPage';\r\n\r\nfunction App() {\r\n  const [connected, setConnected] = useState(false);\r\n  const [receiverIp, setReceiverIp] = useState('');\r\n  const [receiverPort, setReceiverPort] = useState(9090);\r\n\r\n  const handleConnect = (ip, port) => {\r\n    setReceiverIp(ip);\r\n    setReceiverPort(port);\r\n    setConnected(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">QuickLAN File Sender</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n        {!connected ? (\r\n          <HomePage onConnect={handleConnect} />\r\n        ) : (\r\n          <DashboardPage receiverIp={receiverIp} receiverPort={receiverPort} />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AACtE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMmB,aAAa,GAAGA,CAACC,EAAE,EAAEC,IAAI,KAAK;IAClCL,aAAa,CAACI,EAAE,CAAC;IACjBF,eAAe,CAACG,IAAI,CAAC;IACrBP,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACP,MAAM;MAACsB,QAAQ,EAAC,QAAQ;MAAAD,QAAA,eACvBd,OAAA,CAACN,OAAO;QAAAoB,QAAA,eACNd,OAAA,CAACL,UAAU;UAACqB,OAAO,EAAC,IAAI;UAAAF,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACTpB,OAAA,CAACJ,SAAS;MAACyB,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EACpC,CAACT,SAAS,gBACTL,OAAA,CAACH,QAAQ;QAAC2B,SAAS,EAAEb;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEtCpB,OAAA,CAACF,aAAa;QAACS,UAAU,EAAEA,UAAW;QAACE,YAAY,EAAEA;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACrE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA,eACZ,CAAC;AAEP;AAAChB,EAAA,CA3BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}