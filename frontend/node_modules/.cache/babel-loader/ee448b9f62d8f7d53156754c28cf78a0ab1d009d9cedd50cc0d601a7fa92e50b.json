{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivas\\\\My Project\\\\QuickLAN\\\\frontend\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Typography, Paper, List, ListItem, ListItemText, Snackbar, Alert, CircularProgress, Chip, IconButton, Tooltip } from '@mui/material';\nimport { Refresh as RefreshIcon, Send as SendIcon, Error as ErrorIcon } from '@mui/icons-material';\nimport axios from 'axios';\nimport FileUploader from '../components/FileUploader';\nimport TransferLogs from '../components/TransferLogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = ({\n  receiverIp,\n  receiverPort\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [progressMessages, setProgressMessages] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n\n  // Memoize fetchFiles to prevent unnecessary re-renders\n  const fetchFiles = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://localhost:9092/api/files', {\n        timeout: 5000 // 5 second timeout\n      });\n      setFiles(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error fetching files:', error);\n      const errorMessage = (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message || error.code === 'ECONNABORTED' ? 'Request timeout' : 'Failed to fetch files';\n      showSnackbar(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchFiles();\n  }, [fetchFiles]);\n  const showSnackbar = useCallback((message, severity = 'info') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  }, []);\n  const handleCloseSnackbar = useCallback(() => {\n    setSnackbar(prev => ({\n      ...prev,\n      open: false\n    }));\n  }, []);\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const validateInputs = () => {\n    if (!receiverIp || !receiverPort) {\n      showSnackbar('Receiver IP and port must be set.', 'warning');\n      return false;\n    }\n    // Basic IP validation\n    const ipRegex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    if (!ipRegex.test(receiverIp)) {\n      showSnackbar('Invalid IP address format.', 'warning');\n      return false;\n    }\n    // Port validation\n    const port = parseInt(receiverPort);\n    if (isNaN(port) || port < 1 || port > 65535) {\n      showSnackbar('Port must be between 1 and 65535.', 'warning');\n      return false;\n    }\n    return true;\n  };\n  const handleFileUpload = async file => {\n    if (!validateInputs()) return;\n\n    // File size validation (e.g., max 100MB)\n    const maxSize = 100 * 1024 * 1024; // 100MB\n    if (file.size > maxSize) {\n      showSnackbar('File size exceeds 100MB limit.', 'warning');\n      return;\n    }\n    setUploading(true);\n    const startTime = Date.now();\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Add progress message\n      setProgressMessages(prev => [...prev, `${new Date().toLocaleTimeString()}: Starting upload of ${file.name}`]);\n\n      // Upload file to backend with progress tracking\n      await axios.post('http://localhost:9092/api/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 60000,\n        // 60 second timeout for uploads\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgressMessages(prev => {\n            const newLogs = [...prev];\n            const lastIndex = newLogs.length - 1;\n            if (lastIndex >= 0 && newLogs[lastIndex].includes('Upload progress:')) {\n              newLogs[lastIndex] = `${new Date().toLocaleTimeString()}: Upload progress: ${percentCompleted}%`;\n            } else {\n              newLogs.push(`${new Date().toLocaleTimeString()}: Upload progress: ${percentCompleted}%`);\n            }\n            return newLogs;\n          });\n        }\n      });\n      setProgressMessages(prev => [...prev, `${new Date().toLocaleTimeString()}: Upload completed. Initiating transfer...`]);\n\n      // Send file via TCP\n      await axios.post('http://localhost:9092/api/send', null, {\n        params: {\n          receiverIp,\n          receiverPort,\n          filePath: `received_files/${file.name}`\n        },\n        timeout: 30000 // 30 second timeout for sending\n      });\n      const duration = ((Date.now() - startTime) / 1000).toFixed(2);\n      const successMessage = `File \"${file.name}\" sent successfully in ${duration}s!`;\n      setProgressMessages(prev => [...prev, `${new Date().toLocaleTimeString()}: ${successMessage}`]);\n      showSnackbar(successMessage, 'success');\n      await fetchFiles(); // Refresh file list\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error sending file:', error);\n      const errorMessage = (_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message || error.code === 'ECONNABORTED' ? 'Operation timeout' : error.code === 'ECONNREFUSED' ? 'Connection refused' : 'Failed to send file';\n      setProgressMessages(prev => [...prev, `${new Date().toLocaleTimeString()}: Error - ${errorMessage}`]);\n      showSnackbar(errorMessage, 'error');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleSendExistingFile = async fileName => {\n    if (!validateInputs()) return;\n    try {\n      await axios.post('http://localhost:9092/api/send', null, {\n        params: {\n          receiverIp,\n          receiverPort,\n          filePath: `received_files/${fileName}`\n        },\n        timeout: 30000\n      });\n      showSnackbar(`File \"${fileName}\" sent successfully!`, 'success');\n      setProgressMessages(prev => [...prev, `${new Date().toLocaleTimeString()}: Sent existing file: ${fileName}`]);\n    } catch (error) {\n      console.error('Error sending existing file:', error);\n      showSnackbar('Failed to send file.', 'error');\n    }\n  };\n  const getConnectionStatus = () => {\n    return receiverIp && receiverPort ? 'connected' : 'disconnected';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"File Transfer Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `${getConnectionStatus()}`,\n        color: getConnectionStatus() === 'connected' ? 'success' : 'error',\n        size: \"small\",\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Refresh file list\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: fetchFiles,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), receiverIp && receiverPort && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3,\n        bgcolor: 'background.default'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [\"Target: \", receiverIp, \":\", receiverPort]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileUpload: handleFileUpload,\n      uploading: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mt: 4,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          flexGrow: 1\n        },\n        children: [\"Available Files (\", files.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        maxHeight: 300,\n        overflowY: 'auto',\n        mb: 3\n      },\n      children: files.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No files available. Upload a file to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: index < files.length - 1,\n          secondaryAction: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Send this file\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => handleSendExistingFile(file.name),\n              disabled: !receiverIp || !receiverPort,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: file.name,\n            secondary: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), file.lastModified && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"\\u2022 Modified: \", new Date(file.lastModified).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)\n        }, `${file.name}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransferLogs, {\n      logs: progressMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        variant: \"filled\",\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"IA0HpPdlnZ3J5mCSdV0YS2D8JVg=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Typography","Paper","List","ListItem","ListItemText","Snackbar","Alert","CircularProgress","Chip","IconButton","Tooltip","Refresh","RefreshIcon","Send","SendIcon","Error","ErrorIcon","axios","FileUploader","TransferLogs","jsxDEV","_jsxDEV","DashboardPage","receiverIp","receiverPort","_s","files","setFiles","progressMessages","setProgressMessages","uploading","setUploading","loading","setLoading","snackbar","setSnackbar","open","message","severity","fetchFiles","response","get","timeout","data","error","_error$response","_error$response$data","console","errorMessage","code","showSnackbar","handleCloseSnackbar","prev","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","validateInputs","ipRegex","test","port","parseInt","isNaN","handleFileUpload","file","maxSize","size","startTime","Date","now","formData","FormData","append","toLocaleTimeString","name","post","headers","onUploadProgress","progressEvent","percentCompleted","round","loaded","total","newLogs","lastIndex","length","includes","push","params","filePath","duration","successMessage","_error$response2","_error$response2$data","handleSendExistingFile","fileName","getConnectionStatus","sx","p","children","display","alignItems","mb","variant","flexGrow","_jsxFileName","lineNumber","columnNumber","label","color","mr","title","onClick","disabled","bgcolor","onFileUpload","mt","maxHeight","overflowY","textAlign","map","index","divider","secondaryAction","edge","primary","secondary","gap","lastModified","toLocaleDateString","logs","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Snackbar,\r\n  Alert,\r\n  CircularProgress,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport {\r\n  Refresh as RefreshIcon,\r\n  Send as SendIcon,\r\n  Error as ErrorIcon,\r\n} from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport FileUploader from '../components/FileUploader';\r\nimport TransferLogs from '../components/TransferLogs';\r\n\r\nconst DashboardPage = ({ receiverIp, receiverPort }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [progressMessages, setProgressMessages] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({ \r\n    open: false, \r\n    message: '', \r\n    severity: 'info' \r\n  });\r\n\r\n  // Memoize fetchFiles to prevent unnecessary re-renders\r\n  const fetchFiles = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:9092/api/files', {\r\n        timeout: 5000, // 5 second timeout\r\n      });\r\n      setFiles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      const errorMessage = error.response?.data?.message || \r\n                          error.code === 'ECONNABORTED' ? 'Request timeout' : \r\n                          'Failed to fetch files';\r\n      showSnackbar(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n  }, [fetchFiles]);\r\n\r\n  const showSnackbar = useCallback((message, severity = 'info') => {\r\n    setSnackbar({ open: true, message, severity });\r\n  }, []);\r\n\r\n  const handleCloseSnackbar = useCallback(() => {\r\n    setSnackbar(prev => ({ ...prev, open: false }));\r\n  }, []);\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    if (!receiverIp || !receiverPort) {\r\n      showSnackbar('Receiver IP and port must be set.', 'warning');\r\n      return false;\r\n    }\r\n    // Basic IP validation\r\n    const ipRegex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\r\n    if (!ipRegex.test(receiverIp)) {\r\n      showSnackbar('Invalid IP address format.', 'warning');\r\n      return false;\r\n    }\r\n    // Port validation\r\n    const port = parseInt(receiverPort);\r\n    if (isNaN(port) || port < 1 || port > 65535) {\r\n      showSnackbar('Port must be between 1 and 65535.', 'warning');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleFileUpload = async (file) => {\r\n    if (!validateInputs()) return;\r\n\r\n    // File size validation (e.g., max 100MB)\r\n    const maxSize = 100 * 1024 * 1024; // 100MB\r\n    if (file.size > maxSize) {\r\n      showSnackbar('File size exceeds 100MB limit.', 'warning');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      // Add progress message\r\n      setProgressMessages(prev => [...prev, \r\n        `${new Date().toLocaleTimeString()}: Starting upload of ${file.name}`\r\n      ]);\r\n\r\n      // Upload file to backend with progress tracking\r\n      await axios.post('http://localhost:9092/api/files/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        timeout: 60000, // 60 second timeout for uploads\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          setProgressMessages(prev => {\r\n            const newLogs = [...prev];\r\n            const lastIndex = newLogs.length - 1;\r\n            if (lastIndex >= 0 && newLogs[lastIndex].includes('Upload progress:')) {\r\n              newLogs[lastIndex] = `${new Date().toLocaleTimeString()}: Upload progress: ${percentCompleted}%`;\r\n            } else {\r\n              newLogs.push(`${new Date().toLocaleTimeString()}: Upload progress: ${percentCompleted}%`);\r\n            }\r\n            return newLogs;\r\n          });\r\n        }\r\n      });\r\n\r\n      setProgressMessages(prev => [...prev, \r\n        `${new Date().toLocaleTimeString()}: Upload completed. Initiating transfer...`\r\n      ]);\r\n\r\n      // Send file via TCP\r\n      await axios.post('http://localhost:9092/api/send', null, {\r\n        params: {\r\n          receiverIp,\r\n          receiverPort,\r\n          filePath: `received_files/${file.name}`,\r\n        },\r\n        timeout: 30000, // 30 second timeout for sending\r\n      });\r\n\r\n      const duration = ((Date.now() - startTime) / 1000).toFixed(2);\r\n      const successMessage = `File \"${file.name}\" sent successfully in ${duration}s!`;\r\n      \r\n      setProgressMessages(prev => [...prev, \r\n        `${new Date().toLocaleTimeString()}: ${successMessage}`\r\n      ]);\r\n      \r\n      showSnackbar(successMessage, 'success');\r\n      await fetchFiles(); // Refresh file list\r\n      \r\n    } catch (error) {\r\n      console.error('Error sending file:', error);\r\n      const errorMessage = error.response?.data?.message || \r\n                          error.code === 'ECONNABORTED' ? 'Operation timeout' :\r\n                          error.code === 'ECONNREFUSED' ? 'Connection refused' :\r\n                          'Failed to send file';\r\n      \r\n      setProgressMessages(prev => [...prev, \r\n        `${new Date().toLocaleTimeString()}: Error - ${errorMessage}`\r\n      ]);\r\n      \r\n      showSnackbar(errorMessage, 'error');\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendExistingFile = async (fileName) => {\r\n    if (!validateInputs()) return;\r\n\r\n    try {\r\n      await axios.post('http://localhost:9092/api/send', null, {\r\n        params: {\r\n          receiverIp,\r\n          receiverPort,\r\n          filePath: `received_files/${fileName}`,\r\n        },\r\n        timeout: 30000,\r\n      });\r\n      \r\n      showSnackbar(`File \"${fileName}\" sent successfully!`, 'success');\r\n      setProgressMessages(prev => [...prev, \r\n        `${new Date().toLocaleTimeString()}: Sent existing file: ${fileName}`\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error sending existing file:', error);\r\n      showSnackbar('Failed to send file.', 'error');\r\n    }\r\n  };\r\n\r\n  const getConnectionStatus = () => {\r\n    return receiverIp && receiverPort ? 'connected' : 'disconnected';\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\r\n          File Transfer Dashboard\r\n        </Typography>\r\n        <Chip \r\n          label={`${getConnectionStatus()}`}\r\n          color={getConnectionStatus() === 'connected' ? 'success' : 'error'}\r\n          size=\"small\"\r\n          sx={{ mr: 1 }}\r\n        />\r\n        <Tooltip title=\"Refresh file list\">\r\n          <IconButton onClick={fetchFiles} disabled={loading}>\r\n            {loading ? <CircularProgress size={20} /> : <RefreshIcon />}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      {receiverIp && receiverPort && (\r\n        <Paper sx={{ p: 2, mb: 3, bgcolor: 'background.default' }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Target: {receiverIp}:{receiverPort}\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n\r\n      <FileUploader onFileUpload={handleFileUpload} uploading={uploading} />\r\n\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mt: 4, mb: 2 }}>\r\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n          Available Files ({files.length})\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Paper sx={{ maxHeight: 300, overflowY: 'auto', mb: 3 }}>\r\n        {files.length === 0 ? (\r\n          <Box sx={{ p: 3, textAlign: 'center' }}>\r\n            <Typography color=\"text.secondary\">\r\n              No files available. Upload a file to get started.\r\n            </Typography>\r\n          </Box>\r\n        ) : (\r\n          <List>\r\n            {files.map((file, index) => (\r\n              <ListItem \r\n                key={`${file.name}-${index}`} \r\n                divider={index < files.length - 1}\r\n                secondaryAction={\r\n                  <Tooltip title=\"Send this file\">\r\n                    <IconButton \r\n                      edge=\"end\" \r\n                      onClick={() => handleSendExistingFile(file.name)}\r\n                      disabled={!receiverIp || !receiverPort}\r\n                    >\r\n                      <SendIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                }\r\n              >\r\n                <ListItemText \r\n                  primary={file.name} \r\n                  secondary={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {formatFileSize(file.size)}\r\n                      </Typography>\r\n                      {file.lastModified && (\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          • Modified: {new Date(file.lastModified).toLocaleDateString()}\r\n                        </Typography>\r\n                      )}\r\n                    </Box>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        )}\r\n      </Paper>\r\n\r\n      <TransferLogs logs={progressMessages} />\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseSnackbar} \r\n          severity={snackbar.severity} \r\n          sx={{ width: '100%' }}\r\n          variant=\"filled\"\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SACEC,GAAG,EACHC,UAAU,EACVC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,KAAK,EACLC,gBAAgB,EAChBC,IAAI,EACJC,UAAU,EACVC,OAAO,QACF,eAAe;AACtB,SACEC,OAAO,IAAIC,WAAW,EACtBC,IAAI,IAAIC,QAAQ,EAChBC,KAAK,IAAIC,SAAS,QACb,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC;IACvCwC,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAGzC,WAAW,CAAC,YAAY;IACzCmC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,iCAAiC,EAAE;QAClEC,OAAO,EAAE,IAAI,CAAE;MACjB,CAAC,CAAC;MACFf,QAAQ,CAACa,QAAQ,CAACG,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMI,YAAY,GAAG,CAAAH,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,gBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,eAApBA,oBAAA,CAAsBT,OAAO,IAC9BO,KAAK,CAACK,IAAI,KAAK,cAAc,GAAG,iBAAiB,GACjD,uBAAuB;MAC3CC,YAAY,CAACF,YAAY,EAAE,OAAO,CAAC;IACrC,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACd0C,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMW,YAAY,GAAGpD,WAAW,CAAC,CAACuC,OAAO,EAAEC,QAAQ,GAAG,MAAM,KAAK;IAC/DH,WAAW,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO;MAAEC;IAAS,CAAC,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,mBAAmB,GAAGrD,WAAW,CAAC,MAAM;IAC5CqC,WAAW,CAACiB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEhB,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IACjC,MAAMC,CAAC,GAAG,IAAI;IACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;IACnD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;EACzE,CAAC;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACzC,UAAU,IAAI,CAACC,YAAY,EAAE;MAChC0B,YAAY,CAAC,mCAAmC,EAAE,SAAS,CAAC;MAC5D,OAAO,KAAK;IACd;IACA;IACA,MAAMe,OAAO,GAAG,yBAAyB;IACzC,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC3C,UAAU,CAAC,EAAE;MAC7B2B,YAAY,CAAC,4BAA4B,EAAE,SAAS,CAAC;MACrD,OAAO,KAAK;IACd;IACA;IACA,MAAMiB,IAAI,GAAGC,QAAQ,CAAC5C,YAAY,CAAC;IACnC,IAAI6C,KAAK,CAACF,IAAI,CAAC,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAG,KAAK,EAAE;MAC3CjB,YAAY,CAAC,mCAAmC,EAAE,SAAS,CAAC;MAC5D,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMoB,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACvC,IAAI,CAACP,cAAc,CAAC,CAAC,EAAE;;IAEvB;IACA,MAAMQ,OAAO,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IACnC,IAAID,IAAI,CAACE,IAAI,GAAGD,OAAO,EAAE;MACvBtB,YAAY,CAAC,gCAAgC,EAAE,SAAS,CAAC;MACzD;IACF;IAEAnB,YAAY,CAAC,IAAI,CAAC;IAClB,MAAM2C,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAE5B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;;MAE7B;MACA1C,mBAAmB,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAClC,GAAG,IAAIuB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,wBAAwBT,IAAI,CAACU,IAAI,EAAE,CACtE,CAAC;;MAEF;MACA,MAAMhE,KAAK,CAACiE,IAAI,CAAC,wCAAwC,EAAEL,QAAQ,EAAE;QACnEM,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB,CAAC;QAClDzC,OAAO,EAAE,KAAK;QAAE;QAChB0C,gBAAgB,EAAGC,aAAa,IAAK;UACnC,MAAMC,gBAAgB,GAAG5B,IAAI,CAAC6B,KAAK,CAChCF,aAAa,CAACG,MAAM,GAAG,GAAG,GAAIH,aAAa,CAACI,KAC/C,CAAC;UACD5D,mBAAmB,CAACuB,IAAI,IAAI;YAC1B,MAAMsC,OAAO,GAAG,CAAC,GAAGtC,IAAI,CAAC;YACzB,MAAMuC,SAAS,GAAGD,OAAO,CAACE,MAAM,GAAG,CAAC;YACpC,IAAID,SAAS,IAAI,CAAC,IAAID,OAAO,CAACC,SAAS,CAAC,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;cACrEH,OAAO,CAACC,SAAS,CAAC,GAAG,GAAG,IAAIhB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,sBAAsBM,gBAAgB,GAAG;YAClG,CAAC,MAAM;cACLI,OAAO,CAACI,IAAI,CAAC,GAAG,IAAInB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,sBAAsBM,gBAAgB,GAAG,CAAC;YAC3F;YACA,OAAOI,OAAO;UAChB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEF7D,mBAAmB,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAClC,GAAG,IAAIuB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,4CAA4C,CAC/E,CAAC;;MAEF;MACA,MAAM/D,KAAK,CAACiE,IAAI,CAAC,gCAAgC,EAAE,IAAI,EAAE;QACvDa,MAAM,EAAE;UACNxE,UAAU;UACVC,YAAY;UACZwE,QAAQ,EAAE,kBAAkBzB,IAAI,CAACU,IAAI;QACvC,CAAC;QACDvC,OAAO,EAAE,KAAK,CAAE;MAClB,CAAC,CAAC;MAEF,MAAMuD,QAAQ,GAAG,CAAC,CAACtB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,SAAS,IAAI,IAAI,EAAEX,OAAO,CAAC,CAAC,CAAC;MAC7D,MAAMmC,cAAc,GAAG,SAAS3B,IAAI,CAACU,IAAI,0BAA0BgB,QAAQ,IAAI;MAE/EpE,mBAAmB,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAClC,GAAG,IAAIuB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,KAAKkB,cAAc,EAAE,CACxD,CAAC;MAEFhD,YAAY,CAACgD,cAAc,EAAE,SAAS,CAAC;MACvC,MAAM3D,UAAU,CAAC,CAAC,CAAC,CAAC;IAEtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAuD,gBAAA,EAAAC,qBAAA;MACdrD,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMI,YAAY,GAAG,CAAAmD,gBAAA,GAAAvD,KAAK,CAACJ,QAAQ,cAAA2D,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBxD,IAAI,cAAAyD,qBAAA,eAApBA,qBAAA,CAAsB/D,OAAO,IAC9BO,KAAK,CAACK,IAAI,KAAK,cAAc,GAAG,mBAAmB,GACnDL,KAAK,CAACK,IAAI,KAAK,cAAc,GAAG,oBAAoB,GACpD,qBAAqB;MAEzCpB,mBAAmB,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAClC,GAAG,IAAIuB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,aAAahC,YAAY,EAAE,CAC9D,CAAC;MAEFE,YAAY,CAACF,YAAY,EAAE,OAAO,CAAC;IACrC,CAAC,SAAS;MACRjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMsE,sBAAsB,GAAG,MAAOC,QAAQ,IAAK;IACjD,IAAI,CAACtC,cAAc,CAAC,CAAC,EAAE;IAEvB,IAAI;MACF,MAAM/C,KAAK,CAACiE,IAAI,CAAC,gCAAgC,EAAE,IAAI,EAAE;QACvDa,MAAM,EAAE;UACNxE,UAAU;UACVC,YAAY;UACZwE,QAAQ,EAAE,kBAAkBM,QAAQ;QACtC,CAAC;QACD5D,OAAO,EAAE;MACX,CAAC,CAAC;MAEFQ,YAAY,CAAC,SAASoD,QAAQ,sBAAsB,EAAE,SAAS,CAAC;MAChEzE,mBAAmB,CAACuB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAClC,GAAG,IAAIuB,IAAI,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,yBAAyBsB,QAAQ,EAAE,CACtE,CAAC;IACJ,CAAC,CAAC,OAAO1D,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDM,YAAY,CAAC,sBAAsB,EAAE,OAAO,CAAC;IAC/C;EACF,CAAC;EAED,MAAMqD,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OAAOhF,UAAU,IAAIC,YAAY,GAAG,WAAW,GAAG,cAAc;EAClE,CAAC;EAED,oBACEH,OAAA,CAACtB,GAAG;IAACyG,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChBrF,OAAA,CAACtB,GAAG;MAACyG,EAAE,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACxDrF,OAAA,CAACrB,UAAU;QAAC8G,OAAO,EAAC,IAAI;QAACN,EAAE,EAAE;UAAEO,QAAQ,EAAE;QAAE,CAAE;QAAAL,QAAA,EAAC;MAE9C;QAAAJ,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb7F,OAAA,CAACb,IAAI;QACH2G,KAAK,EAAE,GAAGZ,mBAAmB,CAAC,CAAC,EAAG;QAClCa,KAAK,EAAEb,mBAAmB,CAAC,CAAC,KAAK,WAAW,GAAG,SAAS,GAAG,OAAQ;QACnE9B,IAAI,EAAC,OAAO;QACZ+B,EAAE,EAAE;UAAEa,EAAE,EAAE;QAAE;MAAE;QAAAf,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACF7F,OAAA,CAACX,OAAO;QAAC4G,KAAK,EAAC,mBAAmB;QAAAZ,QAAA,eAChCrF,OAAA,CAACZ,UAAU;UAAC8G,OAAO,EAAEhF,UAAW;UAACiF,QAAQ,EAAExF,OAAQ;UAAA0E,QAAA,EAChD1E,OAAO,gBAAGX,OAAA,CAACd,gBAAgB;YAACkE,IAAI,EAAE;UAAG;YAAA6B,QAAA,EAAAU,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG7F,OAAA,CAACT,WAAW;YAAA0F,QAAA,EAAAU,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAZ,QAAA,EAAAU,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC;QAAAZ,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EAEL3F,UAAU,IAAIC,YAAY,iBACzBH,OAAA,CAACpB,KAAK;MAACuG,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEI,EAAE,EAAE,CAAC;QAAEY,OAAO,EAAE;MAAqB,CAAE;MAAAf,QAAA,eACxDrF,OAAA,CAACrB,UAAU;QAAC8G,OAAO,EAAC,OAAO;QAACM,KAAK,EAAC,gBAAgB;QAAAV,QAAA,GAAC,UACzC,EAACnF,UAAU,EAAC,GAAC,EAACC,YAAY;MAAA;QAAA8E,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,eAED7F,OAAA,CAACH,YAAY;MAACwG,YAAY,EAAEpD,gBAAiB;MAACxC,SAAS,EAAEA;IAAU;MAAAwE,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtE7F,OAAA,CAACtB,GAAG;MAACyG,EAAE,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEe,EAAE,EAAE,CAAC;QAAEd,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,eAC/DrF,OAAA,CAACrB,UAAU;QAAC8G,OAAO,EAAC,IAAI;QAACN,EAAE,EAAE;UAAEO,QAAQ,EAAE;QAAE,CAAE;QAAAL,QAAA,GAAC,mBAC3B,EAAChF,KAAK,CAACkE,MAAM,EAAC,GACjC;MAAA;QAAAU,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEN7F,OAAA,CAACpB,KAAK;MAACuG,EAAE,EAAE;QAAEoB,SAAS,EAAE,GAAG;QAAEC,SAAS,EAAE,MAAM;QAAEhB,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EACrDhF,KAAK,CAACkE,MAAM,KAAK,CAAC,gBACjBvE,OAAA,CAACtB,GAAG;QAACyG,EAAE,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEqB,SAAS,EAAE;QAAS,CAAE;QAAApB,QAAA,eACrCrF,OAAA,CAACrB,UAAU;UAACoH,KAAK,EAAC,gBAAgB;UAAAV,QAAA,EAAC;QAEnC;UAAAJ,QAAA,EAAAU,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAZ,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,gBAEN7F,OAAA,CAACnB,IAAI;QAAAwG,QAAA,EACFhF,KAAK,CAACqG,GAAG,CAAC,CAACxD,IAAI,EAAEyD,KAAK,kBACrB3G,OAAA,CAAClB,QAAQ;UAEP8H,OAAO,EAAED,KAAK,GAAGtG,KAAK,CAACkE,MAAM,GAAG,CAAE;UAClCsC,eAAe,eACb7G,OAAA,CAACX,OAAO;YAAC4G,KAAK,EAAC,gBAAgB;YAAAZ,QAAA,eAC7BrF,OAAA,CAACZ,UAAU;cACT0H,IAAI,EAAC,KAAK;cACVZ,OAAO,EAAEA,CAAA,KAAMlB,sBAAsB,CAAC9B,IAAI,CAACU,IAAI,CAAE;cACjDuC,QAAQ,EAAE,CAACjG,UAAU,IAAI,CAACC,YAAa;cAAAkF,QAAA,eAEvCrF,OAAA,CAACP,QAAQ;gBAAAwF,QAAA,EAAAU,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAZ,QAAA,EAAAU,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAZ,QAAA,EAAAU,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACV;UAAAR,QAAA,eAEDrF,OAAA,CAACjB,YAAY;YACXgI,OAAO,EAAE7D,IAAI,CAACU,IAAK;YACnBoD,SAAS,eACPhH,OAAA,CAACtB,GAAG;cAACyG,EAAE,EAAE;gBAAEG,OAAO,EAAE,MAAM;gBAAEC,UAAU,EAAE,QAAQ;gBAAE0B,GAAG,EAAE;cAAE,CAAE;cAAA5B,QAAA,gBACzDrF,OAAA,CAACrB,UAAU;gBAAC8G,OAAO,EAAC,OAAO;gBAACM,KAAK,EAAC,gBAAgB;gBAAAV,QAAA,EAC/CrD,cAAc,CAACkB,IAAI,CAACE,IAAI;cAAC;gBAAA6B,QAAA,EAAAU,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC,EACZ3C,IAAI,CAACgE,YAAY,iBAChBlH,OAAA,CAACrB,UAAU;gBAAC8G,OAAO,EAAC,OAAO;gBAACM,KAAK,EAAC,gBAAgB;gBAAAV,QAAA,GAAC,mBACrC,EAAC,IAAI/B,IAAI,CAACJ,IAAI,CAACgE,YAAY,CAAC,CAACC,kBAAkB,CAAC,CAAC;cAAA;gBAAAlC,QAAA,EAAAU,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CACb;YAAA;cAAAZ,QAAA,EAAAU,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UACN;YAAAZ,QAAA,EAAAU,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC,GA5BG,GAAG3C,IAAI,CAACU,IAAI,IAAI+C,KAAK,EAAE;UAAA1B,QAAA,EAAAU,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6BpB,CACX;MAAC;QAAAZ,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IACP;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAER7F,OAAA,CAACF,YAAY;MAACsH,IAAI,EAAE7G;IAAiB;MAAA0E,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExC7F,OAAA,CAAChB,QAAQ;MACP+B,IAAI,EAAEF,QAAQ,CAACE,IAAK;MACpBsG,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAExF,mBAAoB;MAC7ByF,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAApC,QAAA,eAE3DrF,OAAA,CAACf,KAAK;QACJqI,OAAO,EAAExF,mBAAoB;QAC7Bb,QAAQ,EAAEJ,QAAQ,CAACI,QAAS;QAC5BkE,EAAE,EAAE;UAAEuC,KAAK,EAAE;QAAO,CAAE;QACtBjC,OAAO,EAAC,QAAQ;QAAAJ,QAAA,EAEfxE,QAAQ,CAACG;MAAO;QAAAiE,QAAA,EAAAU,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAZ,QAAA,EAAAU,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAZ,QAAA,EAAAU,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACzF,EAAA,CAzRIH,aAAa;AAAA0H,EAAA,GAAb1H,aAAa;AA2RnB,eAAeA,aAAa;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}