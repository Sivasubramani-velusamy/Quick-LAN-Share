{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivas\\\\My Project\\\\QuickLAN\\\\frontend\\\\src\\\\pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, TextField, Button, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  onConnect\n}) => {\n  _s();\n  const [ip, setIp] = useState('');\n  const [port, setPort] = useState(9090);\n  const [recentDevices, setRecentDevices] = useState([]);\n  useEffect(() => {\n    const storedDevices = localStorage.getItem('recentDevices');\n    if (storedDevices) {\n      setRecentDevices(JSON.parse(storedDevices));\n    }\n  }, []);\n  const handleConnect = () => {\n    if (ip && port) {\n      onConnect(ip, port);\n      const updatedDevices = [{\n        ip,\n        port\n      }, ...recentDevices.filter(d => d.ip !== ip || d.port !== port)];\n      setRecentDevices(updatedDevices);\n      localStorage.setItem('recentDevices', JSON.stringify(updatedDevices));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      maxWidth: 400,\n      margin: 'auto',\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Connect to Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Receiver IP\",\n        value: ip,\n        onChange: e => setIp(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Receiver Port\",\n        type: \"number\",\n        value: port,\n        onChange: e => setPort(Number(e.target.value)),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleConnect,\n        disabled: !ip || !port,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), recentDevices.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          mt: 3\n        },\n        children: \"Recent Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: recentDevices.map(({\n          ip,\n          port\n        }, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => onConnect(ip, port),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${ip}:${port}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"+DmVP4FkN0lU/tCbZNEqlpyGwOg=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","TextField","Button","List","ListItem","ListItemText","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","onConnect","_s","ip","setIp","port","setPort","recentDevices","setRecentDevices","storedDevices","localStorage","getItem","JSON","parse","handleConnect","updatedDevices","filter","d","setItem","stringify","sx","p","maxWidth","margin","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","fullWidth","type","Number","onClick","disabled","length","map","index","button","primary","_c","$RefreshReg$"],"sources":["C:/Users/sivas/My Project/QuickLAN/frontend/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from '@mui/material';\r\n\r\nconst HomePage = ({ onConnect }) => {\r\n  const [ip, setIp] = useState('');\r\n  const [port, setPort] = useState(9090);\r\n  const [recentDevices, setRecentDevices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedDevices = localStorage.getItem('recentDevices');\r\n    if (storedDevices) {\r\n      setRecentDevices(JSON.parse(storedDevices));\r\n    }\r\n  }, []);\r\n\r\n  const handleConnect = () => {\r\n    if (ip && port) {\r\n      onConnect(ip, port);\r\n      const updatedDevices = [ { ip, port }, ...recentDevices.filter(d => d.ip !== ip || d.port !== port) ];\r\n      setRecentDevices(updatedDevices);\r\n      localStorage.setItem('recentDevices', JSON.stringify(updatedDevices));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, maxWidth: 400, margin: 'auto', mt: 6 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Connect to Receiver\r\n      </Typography>\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        <TextField\r\n          label=\"Receiver IP\"\r\n          value={ip}\r\n          onChange={(e) => setIp(e.target.value)}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Receiver Port\"\r\n          type=\"number\"\r\n          value={port}\r\n          onChange={(e) => setPort(Number(e.target.value))}\r\n          fullWidth\r\n        />\r\n        <Button variant=\"contained\" onClick={handleConnect} disabled={!ip || !port}>\r\n          Connect\r\n        </Button>\r\n      </Box>\r\n\r\n      {recentDevices.length > 0 && (\r\n        <>\r\n          <Typography variant=\"subtitle1\" sx={{ mt: 3 }}>\r\n            Recent Devices\r\n          </Typography>\r\n          <List>\r\n            {recentDevices.map(({ ip, port }, index) => (\r\n              <ListItem button key={index} onClick={() => onConnect(ip, port)}>\r\n                <ListItemText primary={`${ip}:${port}`} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}